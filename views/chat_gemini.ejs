<h2 style="text-align: center; margin-bottom: 20px;">GPT 챗봇 갈구기</h2>

<div id="chat-box"></div>

<div class="chat-inputs">
  <input type="number" id="temp" placeholder="온도 (°C)" />
  <input type="number" id="humidity" placeholder="습도 (%)" />
  <input type="number" id="soil" placeholder="토습 (%)"/>
  <input type="number" id="light" placeholder="광도 (LUX)"/>
  <button onclick="postBinary()">데이터 전송</button>
</div>

<div class="chat-inputs">
  <input type="text" id="message" placeholder="메시지를 입력하세요" />
  <button onclick="sendMessage()">메세지 전송</button>
</div>

<script>
  let userId = "user-test";
  let sensor_key = "1C3BFB6C"
  
  async function postBinary() {
    const temp = document.getElementById("temp").value;
    const humidity = document.getElementById("humidity").value;
    const soil = document.getElementById("soil").value;
    const light = document.getElementById("light").value;

    const response = await fetch("/sensor", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        temp,
        humidity,
        soil,
        light
      }),
    });

    alert("전송 완료!");
  }

  async function sendMessage() {
  const message = document.getElementById("message").value;
  const chatBox = document.getElementById("chat-box");

  if (!message) {
    alert("메시지를 입력하세요!");
    return;
  }

  // 사용자 메시지 표시
  chatBox.innerHTML += `<p><strong>사용자:</strong> ${message}</p>`;

  // AI 응답 가져오기
  const response = await fetch("/chat/dll", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ message }),
  });

  const data = await response.json();
  const aiResponse = data.response;
  chatBox.innerHTML += `<p><strong>AI:</strong> ${aiResponse}</p>`;

  // TTS 자동 재생
  const ttsRes = await fetch("/api/tts", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      text: aiResponse,
      emotion: "neutral",     // 원하는 감정 선택 가능
      intensity: 0.8
    })
  });

  const ttsBlob = await ttsRes.blob();
  const ttsUrl = URL.createObjectURL(ttsBlob);
  const audio = new Audio(ttsUrl);
  audio.play();

  // 입력창 초기화 및 스크롤
  document.getElementById("message").value = "";
  chatBox.scrollTop = chatBox.scrollHeight;
}
</script>

<style>
  #chat-box {
    width: 100%;
    max-width: 600px;
    margin: auto;
    padding: 20px;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    height: 400px;
    overflow-y: auto;
    margin-bottom: 20px;
  }

  .chat-inputs {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    max-width: 600px;
    margin: auto;
  }

  .chat-inputs input,
  .chat-inputs button {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 1rem;
  }

  .chat-inputs button {
    background-color: var(--primary);
    color: white;
    cursor: pointer;
    transition: background 0.3s;
  }

  .chat-inputs button:hover {
    background-color: #388e3c;
  }
</style>
